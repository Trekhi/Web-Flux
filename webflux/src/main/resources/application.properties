spring.application.name=webflux
server.port=9000


# Configuración de Retry. Intento de soliciturdes para saber si esta activo el servidor
resilience4j.retry.instances.stepOne.maxAttempts=5
resilience4j.retry.instances.stepOne.waitDuration=2s

resilience4j.retry.instances.stepTwo.maxAttempts=5
resilience4j.retry.instances.stepTwo.waitDuration=2s

resilience4j.retry.instances.stepThree.maxAttempts=5
resilience4j.retry.instances.stepThree.waitDuration=2s

resilience4j.retry.instances.webHook.maxAttempts=5
resilience4j.retry.instances.webHook.waitDuration=2s


# Configuración de Circuit Breaker. Manejo de error luego de que el servidor no presenta disponibilidad
resilience4j.circuitbreaker.instances.stepOne.slidingWindowSize=5
resilience4j.circuitbreaker.instances.stepOne.failureRateThreshold=50
resilience4j.circuitbreaker.instances.stepOne.waitDurationInOpenState=10000ms


resilience4j.circuitbreaker.instances.stepTwo.slidingWindowSize=5
resilience4j.circuitbreaker.instances.stepTwo.failureRateThreshold=50
resilience4j.circuitbreaker.instances.stepTwo.waitDurationInOpenState=10000ms


resilience4j.circuitbreaker.instances.stepThree.slidingWindowSize=5
resilience4j.circuitbreaker.instances.stepThree.failureRateThreshold=50
resilience4j.circuitbreaker.instances.stepThree.waitDurationInOpenState=10000ms

resilience4j.circuitbreaker.instances.webHook.slidingWindowSize=5
resilience4j.circuitbreaker.instances.webHook.failureRateThreshold=50
resilience4j.circuitbreaker.instances.webHook.waitDurationInOpenState=10000ms